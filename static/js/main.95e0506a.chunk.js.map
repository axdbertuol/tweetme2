{"version":3,"sources":["logo.svg","lookup/components.js","tweets/lookup.js","tweets/buttons.js","profiles/components.js","profiles/utils.js","profiles/badge.js","profiles/lookup.js","tweets/detail.js","tweets/feed.js","tweets/create.js","tweets/list.js","tweets/components.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","responseType","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","send","apiTweetList","username","nextUrl","undefined","replace","apiTweetFeed","ActionBtn","props","tweet","action","didPerformAction","className","likes","newClassName","handleActionBackendEvent","console","log","onClick","event","preventDefault","tweetId","id","apiTweetAction","type","display","UserDisplayLink","user","includeFullname","includeLink","Fragment","first_name","last_name","UserPicture","DisplayCount","numeral","number","format","ProfileBadge","didFollowToggle","profileLoading","currentVerb","is_following","color","follower_count","following_count","ProfileBadgeComponent","useState","didLookup","setDidLookup","profile","setProfile","setProfileLoading","handleBackendLookup","useEffect","apiProfileDetail","actionVerb","toLowerCase","apiProfileFollowToggle","ParentTweet","retweeter","parent","isRetweet","hideActions","Tweet","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","didRetweet","content","FeedList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","tweetsDidSet","setTweetsDidSet","final","newTweets","concat","next","results","handleDidRetweet","newTweet","updatedTweetsInit","unshift","updatedFinalTweets","map","item","index","key","updateTweetsDidSet","isSet","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","alert","onSubmit","newVal","current","value","ref","required","TweetsList","FeedComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","setTweet","apiTweetDetail","App","src","logo","alt","target","rel","Boolean","hostname","getElementById","ReactDOM","render","StrictMode","e","createElement","tweetsEl","JointComponent","dataset","tweetFeedEl","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.95e0506a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// import React from 'react';\n\nexport function backendLookup(method, endpoint, callback, data) {\n\tlet jsonData;\n\tif (data) {\n\t\tjsonData = JSON.stringify(data)\n\t}\n\tconst xhr = new XMLHttpRequest();\n\t// const method = 'GET';\n\tconst url = `http://localhost:8000/api${endpoint}`;\n\tconst responseType = 'json';\n\tconst csrftoken = getCookie('csrftoken');\n\txhr.responseType = responseType;\n\txhr.open(method, url);\n\n\txhr.setRequestHeader(\"Content-Type\", \"application/json\");\n\tif (csrftoken) {\n\t\txhr.setRequestHeader('HTTP_X_REQUESTED_WITH', 'XMLHttpRequest');\n\t\txhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n\t\txhr.setRequestHeader('X-CSRFToken', csrftoken);\n\t}\n\txhr.onload = function () {\n\t\tif (xhr.status === 403){\n\t\t\tconst detail = xhr.response.detail;\n\t\t\tif (detail === \"Authentication credentials were not provided.\"){\n\t\t\t\tif (window.location.href.indexOf(\"login\") === -1){\n\t\t\t\t\twindow.location.href = \"/login?showLoginRequired=true\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcallback(xhr.response, xhr.status);\n\t}\n\txhr.onerror = function () {\n\t\tcallback({ \"message\": \"There was an error fetching data from the server.\" }, 400)\n\t}\n\txhr.send(jsonData);\n}\n\nfunction getCookie(name) {\n\tvar cookieValue = null;\n\tif (document.cookie && document.cookie !== '') {\n\t\tvar cookies = document.cookie.split(';');\n\t\tfor (var i = 0; i < cookies.length; i++) {\n\t\t\tvar cookie = cookies[i].trim();\n\t\t\t// Does this cookie string begin with the name we want?\n\t\t\tif (cookie.substring(0, name.length + 1) === (name + '=')) {\n\t\t\t\tcookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn cookieValue;\n}","import { backendLookup } from '../lookup';\n\nexport function apiTweetCreate(newTweet, callback) {\n\tbackendLookup(\"POST\", \"/tweets/create\", callback, { content: newTweet });\n}\nexport function apiTweetAction(tweetId, action, callback) {\n\tbackendLookup(\"POST\", \"/tweets/action\", callback, { id: tweetId, action: action });\n}\n\nexport function apiTweetDetail(tweetId, callback) {\n\tlet endpoint = \"/tweets/\";\n\n\tif (tweetId) {\n\t\tendpoint += `${tweetId}`;\n\t}\n\tbackendLookup(\"GET\", endpoint, callback);\n}\nexport function apiTweetList(username, callback, nextUrl) {\n\tlet endpoint = \"/tweets/\";\n\n\tif (username) {\n\t\tendpoint += `?username=${username}`;\n\t}\n\tif (nextUrl !== null && nextUrl !== undefined) {\n\t\tendpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\n\t}\n\tbackendLookup(\"GET\", endpoint, callback);\n}\n\nexport function apiTweetFeed(callback, nextUrl) {\n\tlet endpoint = \"/tweets/feed\";\n\n\n\tif (nextUrl !== null && nextUrl !== undefined) {\n\t\tendpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\n\t}\n\tbackendLookup(\"GET\", endpoint, callback);\n}\n","import React from 'react';\nimport { apiTweetAction } from './lookup';\n\nconst ActionBtn = function (props) {\n\tconst { tweet, action, didPerformAction, className } = props;\n\tconst likes = tweet.likes ? tweet.likes : 0;\n\tlet newClassName = 'btn btn-sm' + className;\n\n\tconst handleActionBackendEvent = (response, status) => {\n\t\tconsole.log(response, status);\n\t\tif ((status === 200 || status === 201) && didPerformAction) {\n\t\t\tdidPerformAction(response, status);\n\t\t}\n\t}\n\tconst handleClick = (event) => {\n\t\tevent.preventDefault();\n\t\tapiTweetAction(tweet.id, action.type, handleActionBackendEvent)\n\t}\n\n\treturn <button className={newClassName} onClick={handleClick}>{action.type === 'like' ? likes + ' ' + action.display : action.display}</button>\n\n}\n\nexport {\n\tActionBtn\n}","import React  from 'react';\n\nexport function UserDisplayLink(props) {\n\tconst { user, includeFullname, includeLink } = props;\n\n\tconst handleUserLink = (event) => {\n\t\twindow.location.href = `/profile/${user.username}`;\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t{includeFullname && <span className=\"pl-3\">{user.first_name} {user.last_name}</span>}\n\t\t\t{includeLink && \n\t\t\t\t<span className=\"pl-1 pointer\" onClick={handleUserLink}>@{user.username}</span>\n\t\t\t}\n\t\t</React.Fragment>\n\t)\n}\nexport function UserPicture(props) {\n\tconst { user } = props;\n\treturn (\n\t\t<span className=\"px-3 py-2 rounded-circle bg-dark text-white\">\n\t\t\t{user.username[0]}\n\t\t</span>\n\t)\n}","import React  from 'react';\nimport numeral from 'numeral';\n\nexport function DisplayCount(props) {\n\treturn <span>{numeral(props.number).format(\"0a\")}</span>\n}\n","import React, { useState, useEffect } from 'react';\nimport numeral from 'numeral';\nimport { apiProfileDetail, apiProfileFollowToggle } from './lookup';\nimport { UserDisplayLink, UserPicture } from './components';\n\nimport {DisplayCount} from './utils';\n\n\n\nfunction ProfileBadge(props) {\n\tconst { user, didFollowToggle, profileLoading } = props;\n\tconst currentVerb = profileLoading ? \"Loading...\" : (user && user.is_following) ? \"Unfollow\" : \"Follow\";\n\t\n\tconst handleFollowToggle = (event) =>{\n\t\tevent.preventDefault();\n\t\tif (didFollowToggle && !profileLoading){\n\t\t\tdidFollowToggle(currentVerb);\n\t\t}\n\t}\n\treturn (user &&\n\t\t<div className=\"d-flex\">\n\t\t\t<div className=\"p-2\">\n\t\t\t\t<UserPicture user={user} />\n\t\t\t</div>\n\t\t\t<div className=\"p-2\">\n\t\t\t\t<p><UserDisplayLink user={user} includeFullname includeLink></UserDisplayLink></p>\n\t\t\t</div>\n\t\t\t<div className=\"p-2\">\n\t\t\t\t<span className=\"badge badge-primary\"><DisplayCount color=\"green\" number={user.follower_count} /> follower(s)</span>\n\t\t\t</div>\n\t\t\t<div className=\"p-2\">\n\t\t\t\t<span className=\"badge badge-secondary\"><DisplayCount number={user.following_count} /> following</span>\n\t\t\t</div>\n\t\t\t<div className=\"p-2\">\n\t\t\t\t<button className=\"btn btn-primary\" onClick={handleFollowToggle}>{currentVerb}</button>\n\t\t\t</div>\n\t\t</div>)\n}\n\nexport function ProfileBadgeComponent(props) {\n\tconst { username } = props;\n\tconst [didLookup, setDidLookup] = useState(false);\n\tconst [profile, setProfile] = useState(null);\n\tconst [profileLoading, setProfileLoading] = useState(false); // for controlling toggles\n\n\tconst handleBackendLookup = (response, status) => {\n\t\tif (status === 200) {\n\t\t\tsetProfile(response);\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tif (didLookup === false) {\n\t\t\tapiProfileDetail(username, handleBackendLookup);\n\t\t\tsetDidLookup(true); //\n\t\t}\n\t}, [username, didLookup, setDidLookup]);\n\n\tconst handleNewFollow = (actionVerb) => {\n\t\tapiProfileFollowToggle(username, actionVerb, (response, status) => {\n\t\t\tconsole.log(response, status);\n\t\t\tif (status === 200) {\n\t\t\t\tsetProfile(response); // set asynchronously\n\t\t\t}\n\t\t\tsetProfileLoading(false);\n\t\t})\n\t\tsetProfileLoading(true);\n\t}\n\tif (profile === null) {\n\t\treturn \"Could not render profile.\"\n\t}\n\treturn profile && <ProfileBadge user={profile} didFollowToggle={handleNewFollow} profileLoading={profileLoading}></ProfileBadge>;\n}","import { backendLookup } from '../lookup';\n\nexport function apiProfileDetail(username, callback) {\n\tlet endpoint = \"/profiles/\";\n\n\tif (username) {\n\t\tendpoint += `${username}`;\n\t}\n\tbackendLookup(\"GET\", endpoint, callback);\n}\n\nexport function apiProfileFollowToggle(username, action, callback) {\n\tconst data = {'action': `${ action && action}`.toLowerCase()};\n\tbackendLookup(\"POST\", `/profile/${username}/follow`, callback, data);\n}","import React, { useState } from 'react';\nimport { ActionBtn } from './buttons';\nimport {UserDisplayLink, UserPicture} from  '../profiles';\n\n\nconst ParentTweet = props => {\n\tconst { tweet, retweeter } = props;\n\treturn tweet.parent ? \n\t\t<div><Tweet isRetweet hideActions retweeter={retweeter} tweet={tweet.parent} /></div> : null;\n}\n\nconst Tweet = function (props) {\n\tconst { tweet, hideActions, isRetweet, retweeter } = props;\n\tconst [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null);\n\tconst path = window.location.pathname;\n\tconst match = path.match(/(?<tweetid>\\d+)/);\n\tconst urlTweetId = match ? match.groups.tweetid : -1;\n\tconst isDetail = `${tweet.id}` === `${urlTweetId}`;\n\tlet className = \"col-sm-6 mx-auto border rounded py-3 mb-4\";\n\tclassName = isRetweet ? `${className} bd-highlight border-info` : className;\n\n\tconst handleLink = (event) => {\n\t\tevent.preventDefault();\n\t\twindow.location.href = `/${tweet.id}`\n\t}\n\tconst handlePerformAction = (newActionTweet, status) => {\n\t\tif (status === 200) {\n\t\t\tsetActionTweet(newActionTweet);\n\t\t} else if (status === 201) {\n\t\t\t// let the tweet list know\n\t\t\tif (props.didRetweet) {\n\t\t\t\tsetActionTweet(newActionTweet);\n\t\t\t\tprops.didRetweet(newActionTweet);\n\t\t\t}\n\t\t}\n\t}\n\treturn (\n\t\t<div className={className}>\n\t\t\t<div className=\"d-flex flex-column\">\n\t\t\t\t{isRetweet && \n\t\t\t\t<div className=\"d-flex justify-content-end\">\n\t\t\t\t\t<small>\n\t\t\t\t\t\tRetweet via<UserDisplayLink user={retweeter} includeLink  />\n\t\t\t\t\t</small>\n\t\t\t\t</div>}\n\t\t\t\t<div className=\"justify-content-start py-3\">\n\t\t\t\t\t<UserPicture user={tweet.user}/>\n\t\t\t\t\t<UserDisplayLink user={tweet.user} includeFullname includeLink />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"justify-content-start\">\n\t\t\t\t\t<p className=\"text-break\">{tweet.id} - {tweet.content}</p>\n\t\t\t\t\t<ParentTweet tweet={tweet} retweeter={tweet.user} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"btn btn-group justify-content-start flex-grow-0\">\n\t\t\t\t\t{(actionTweet && hideActions !== true) && <React.Fragment>\n\t\t\t\t\t\t<ActionBtn\n\t\t\t\t\t\t\ttweet={actionTweet}\n\t\t\t\t\t\t\tdidPerformAction={handlePerformAction}\n\t\t\t\t\t\t\taction={{ type: 'like', display: 'Like(s)' }}\n\t\t\t\t\t\t\tclassName=\" btn-primary flex-grow-0\">\n\t\t\t\t\t\t</ActionBtn>\n\t\t\t\t\t\t<ActionBtn\n\t\t\t\t\t\t\ttweet={actionTweet}\n\t\t\t\t\t\t\tdidPerformAction={handlePerformAction}\n\t\t\t\t\t\t\taction={{ type: 'unlike', display: 'Unlike' }}\n\t\t\t\t\t\t\tclassName=\" btn-secondary flex-grow-0\">\n\t\t\t\t\t\t</ActionBtn>\n\t\t\t\t\t\t<ActionBtn\n\t\t\t\t\t\t\ttweet={actionTweet}\n\t\t\t\t\t\t\tdidPerformAction={handlePerformAction}\n\t\t\t\t\t\t\taction={{ type: 'retweet', display: 'Retweet' }}\n\t\t\t\t\t\t\tclassName=\" btn-outline-dark flex-grow-0\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t</ActionBtn>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t}\n\t\t\t\t\t{!isDetail && <button className=\"btn btn-sm btn-success flex-grow-0\" onClick={handleLink}>View</button>}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\n\n\nexport {\n\tParentTweet,\n\tTweet\n}","import React, { useEffect, useState } from 'react';\nimport { apiTweetFeed } from './lookup';\nimport { Tweet } from './detail';\n\nconst FeedList = function (props) {\n\tconst [tweetsInit, setTweetsInit] = useState([]); // initial tweets\n\tconst [tweets, setTweets] = useState([]); // initial + new tweets\n\tconst [nextUrl, setNextUrl] = useState(null);\n\tconst [tweetsDidSet, setTweetsDidSet] = useState(false); // stop constant reloading \n\n\tuseEffect(() => {\n\t\tconsole.log(\"set final tweets\")\n\t\tlet final = [...props.newTweets].concat(tweetsInit);\n\t\tif (final.length !== tweets.length) {\n\t\t\tsetTweets(final);\n\t\t}\n\t}, [props.newTweets, tweets, tweetsInit])\n\n\tuseEffect(() => {\n\t\tif (tweetsDidSet === false) {\n\t\t\tconst handleTweetsListLookup = (response, status) => {\n\t\t\t\tif (status === 200) {\n\t\t\t\t\tsetNextUrl(response.next)\n\t\t\t\t\tsetTweetsInit(response.results);\n\t\t\t\t\tsetTweetsDidSet(true);\n\t\t\t\t\tconsole.log(\"handleTweetsListLookup\", tweetsDidSet)\n\t\t\t\t}\n\t\t\t}\n\t\t\tapiTweetFeed(handleTweetsListLookup)\n\t\t}\n\t\t// do my lookup to backend\n\t}, [tweetsInit, tweetsDidSet, setTweetsDidSet])\n\n\tconst handleDidRetweet = (newTweet) => {\n\t\tconst updatedTweetsInit = [...tweetsInit];\n\t\tupdatedTweetsInit.unshift(newTweet);\n\t\tsetTweetsInit(updatedTweetsInit);\n\t\tconst updatedFinalTweets = [...tweets];\n\t\tupdatedFinalTweets.unshift(tweets);\n\t\tsetTweets(updatedFinalTweets);\n\t\tconsole.log(\"updatedFinalTweets\", updatedFinalTweets)\n\t}\n\n\tconst handleLoadNext = (event) => {\n\t\tevent.preventDefault();\n\t\tif (nextUrl !== null) {\n\t\t\tconst handleLoadNextResponse = (response, status) => {\n\t\t\t\tif (status === 200) {\n\t\t\t\t\tconsole.log(\"handleLoadNextResponse\")\n\t\t\t\t\tsetNextUrl(response.next)\n\t\t\t\t\tconst newTweets = [...tweets].concat(response.results)\n\t\t\t\t\tsetTweetsInit(newTweets);\n\t\t\t\t\tsetTweets(newTweets)\n\t\t\t\t\t// setTweetsDidSet(true);\n\t\t\t\t}\n\t\t\t}\n\t\t\tapiTweetFeed(handleLoadNextResponse, nextUrl)\n\t\t}\n\t}\n\treturn (<React.Fragment>{tweets.map((item, index) => {\n\t\treturn <Tweet\n\t\t\ttweet={item}\n\t\t\tdidRetweet={handleDidRetweet}\n\t\t\tkey={`${index}- ${item.id}`}\n\t\t\tupdateTweetsDidSet={(isSet) => { setTweetsDidSet(isSet) }}\n\t\t/>\n\t})}\n\t\t{nextUrl !== null && <button onClick={handleLoadNext} className=\"btn btn-outline-primary btn-sm\">Load next</button>}\n\t</React.Fragment>)\n\n\n}\n\nexport {\n\tFeedList,\n}","import React  from 'react';\nimport { apiTweetCreate } from './lookup';\n\nexport function TweetCreate(props) {\n\tconst textAreaRef = React.createRef();\n\tconst { didTweet } = props;\n\n\tconst handleBackendUpdate = (response, status) => {\n\t\t// backend api response handler\n\t\tif (status === 201) {\n\t\t\tdidTweet(response);\n\t\t} else {\n\t\t\talert(\"An error occurred while processing new tweet\")\n\t\t}\n\t}\n\n\n\tconst handleSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tconst newVal = textAreaRef.current.value;\n\t\t// backend api request handler\n\t\tapiTweetCreate(newVal, handleBackendUpdate);\n\t\ttextAreaRef.current.value = '';\n\t}\n\n\treturn (\n\t\t<div className={props.className}>\n\t\t\t<div className=\"col-12 mb-3\">\n\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t<textarea ref={textAreaRef} required={true} className=\"form-control\" name=\"tweet\"></textarea>\n\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary my-3\">Tweet</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</div>\n\t)\n}","import React, { useEffect, useState } from 'react';\nimport { apiTweetList } from './lookup';\nimport { Tweet } from './detail';\n\nconst TweetsList = function (props) {\n\tconst [tweetsInit, setTweetsInit] = useState([]); // initial tweets\n\tconst [tweets, setTweets] = useState([]); // initial + new tweets\n\tconst [nextUrl, setNextUrl] = useState(null);\n\tconst [tweetsDidSet, setTweetsDidSet] = useState(false); // stop constant reloading \n\n\tuseEffect(() => {\n\t\tconsole.log(\"set final tweets\")\n\t\tlet final = [...props.newTweets].concat(tweetsInit);\n\t\tif (final.length !== tweets.length) {\n\t\t\tsetTweets(final);\n\t\t}\n\t}, [props.newTweets, tweets, tweetsInit])\n\n\tuseEffect(() => {\n\t\tif (tweetsDidSet === false) {\n\t\t\tconst handleTweetsListLookup = (response, status) => {\n\t\t\t\tif (status === 200) {\n\t\t\t\t\tsetNextUrl(response.next)\n\t\t\t\t\tsetTweetsInit(response.results);\n\t\t\t\t\tsetTweetsDidSet(true);\n\t\t\t\t\tconsole.log(\"handleTweetsListLookup\", tweetsDidSet)\n\t\t\t\t} else {\n\t\t\t\t\t// setTweetsDidSet(false);\n\t\t\t\t\talert(response, status);\n\t\t\t\t}\n\t\t\t}\n\t\t\tapiTweetList(props.username, handleTweetsListLookup)\n\t\t}\n\t\t// do my lookup to backend\n\t}, [props.username, tweetsInit, tweetsDidSet, setTweetsDidSet])\n\n\tconst handleDidRetweet = (newTweet) => {\n\t\tconst updatedTweetsInit = [...tweetsInit];\n\t\tupdatedTweetsInit.unshift(newTweet);\n\t\tsetTweetsInit(updatedTweetsInit);\n\t\tconst updatedFinalTweets = [...tweets];\n\t\tupdatedFinalTweets.unshift(tweets);\n\t\tsetTweets(updatedFinalTweets);\n\t\tconsole.log(\"updatedFinalTweets\", updatedFinalTweets)\n\t}\n\n\tconst handleLoadNext = (event) => {\n\t\tevent.preventDefault();\n\t\tif (nextUrl !== null) {\n\t\t\tconst handleLoadNextResponse = (response, status) => {\n\t\t\t\tif (status === 200) {\n\t\t\t\t\tconsole.log(\"handleLoadNextResponse\")\n\t\t\t\t\tsetNextUrl(response.next)\n\t\t\t\t\tconst newTweets = [...tweets].concat(response.results)\n\t\t\t\t\tsetTweetsInit(newTweets);\n\t\t\t\t\tsetTweets(newTweets)\n\t\t\t\t\t// setTweetsDidSet(true);\n\t\t\t\t} else {\n\t\t\t\t\talert(response, status);\n\t\t\t\t}\n\t\t\t}\n\t\t\tapiTweetList(props.username, handleLoadNextResponse, nextUrl)\n\t\t}\n\t}\n\treturn <React.Fragment>{tweets.map((item, index) => {\n\t\treturn <Tweet\n\t\t\ttweet={item}\n\t\t\tdidRetweet={handleDidRetweet}\n\t\t\tkey={`${index}- ${item.id}`}\n\t\t\tupdateTweetsDidSet={(isSet) => { setTweetsDidSet(isSet) }}\n\t\t/>\n\t})}\n\t{ nextUrl !== null && <button onClick={handleLoadNext} className=\"btn btn-outline-primary btn-sm\">Load next</button>}\n\t</React.Fragment>\n\n\n}\n\nexport {\n\tTweetsList\n}","import React, { useEffect, useState } from 'react';\nimport { Tweet } from './detail';\nimport { apiTweetDetail } from './lookup';\nimport { FeedList } from './feed';\nimport { TweetCreate } from './create';\nimport { TweetsList } from './list';\n\nexport function FeedComponent(props) {\n\tconst [newTweets, setNewTweets] = useState([]);\n\tconst canTweet = props.canTweet === \"false\" ? false : true;\n\tconst handleNewTweet = (newTweet) => {\n\t\t// backend api response handler\n\t\tlet tempNewTweets = [...newTweets];\n\t\ttempNewTweets.unshift(newTweet); // put it to beginning of list\n\t\tsetNewTweets(tempNewTweets);\n\t}\n\n\n\treturn (\n\t\t<div className={props.className}>\n\t\t\t{canTweet === true && <TweetCreate didTweet={handleNewTweet} />}\n\t\t\t<FeedList newTweets={newTweets} {...props} />\n\t\t</div>\n\t)\n}\n\nexport function TweetsComponent(props) {\n\tconst [newTweets, setNewTweets] = useState([]);\n\tconst canTweet = props.canTweet === \"false\" ? false : true;\n\tconst handleNewTweet = (newTweet) => {\n\t\t// backend api response handler\n\t\tlet tempNewTweets = [...newTweets];\n\t\ttempNewTweets.unshift(newTweet); // put it to beginning of list\n\t\tsetNewTweets(tempNewTweets);\n\t}\n\n\n\treturn (\n\t\t<div className={props.className}>\n\t\t\t{canTweet === true && <TweetCreate didTweet={handleNewTweet} />}\n\t\t\t<TweetsList newTweets={newTweets} {...props} />\n\t\t</div>\n\t)\n}\n\n\nexport function TweetDetailComponent(props) {\n\tconst { tweetId } = props;\n\tconst [didLookup, setDidLookup] = useState(false);\n\tconst [tweet, setTweet] = useState(null);\n\n\tconst handleBackendLookup = (response, status) => {\n\t\tif (status === 200) {\n\t\t\tsetTweet(response);\n\t\t} else {\n\t\t\talert(\"There was an error fetching your tweet\")\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tif (didLookup === false) {\n\t\t\tapiTweetDetail(tweetId, handleBackendLookup)\n\t\t\tsetDidLookup(true); //\n\t\t}\n\t}, [tweetId, didLookup, setDidLookup]);\n\n\treturn tweet === null ? null : <Tweet tweet={tweet} className={props.className} />\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport { FeedComponent } from './tweets';\n\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n\t\t\t\t<FeedComponent/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ProfileBadgeComponent} from './profiles'\nimport { FeedComponent, TweetsComponent, TweetDetailComponent} from './tweets';\nimport * as serviceWorker from './serviceWorker';\n\nconst appEl = document.getElementById('root');\nif (appEl) {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\n\nconst e = React.createElement; \nconst tweetsEl = document.getElementById('tweetme-2');\nif (tweetsEl) {\n\tconst JointComponent = e(TweetsComponent, tweetsEl.dataset);\n  ReactDOM.render(JointComponent, tweetsEl);\n}\nconst tweetFeedEl = document.getElementById('tweetme-2-feed');\nif (tweetFeedEl) {\n\tconst JointComponent = e(FeedComponent, tweetFeedEl.dataset);\n  ReactDOM.render(JointComponent, tweetFeedEl);\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".tweetme-2-detail\");\n\ntweetDetailElements.forEach(container => {\n\tconst JointComponent = e(TweetDetailComponent, container.dataset);\n\tReactDOM.render(JointComponent, container);\n})\n\nconst profileBadgeElement = document.querySelectorAll(\".tweetme-2-profile-badge\");\n\nprofileBadgeElement.forEach(container => {\n\tconst JointComponent = e(ProfileBadgeComponent, container.dataset);\n\tReactDOM.render(JointComponent, container);\n})\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}