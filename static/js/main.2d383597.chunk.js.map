{"version":3,"sources":["logo.svg","lookup/components.js","tweets/lookup.js","tweets/buttons.js","tweets/detail.js","tweets/feed.js","tweets/create.js","tweets/list.js","tweets/components.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","responseType","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","send","apiTweetList","username","nextUrl","undefined","replace","apiTweetFeed","ActionBtn","props","tweet","action","didPerformAction","className","likes","newClassName","handleActionBackendEvent","console","log","onClick","event","preventDefault","tweetId","id","apiTweetAction","type","display","UserLink","user","includeFullname","first_name","last_name","UserPicture","ParentTweet","retweeter","parent","isRetweet","hideActions","Tweet","useState","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","didRetweet","content","Fragment","FeedList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","tweetsDidSet","setTweetsDidSet","useEffect","final","newTweets","concat","next","results","handleDidRetweet","newTweet","updatedTweetsInit","unshift","updatedFinalTweets","map","item","index","key","updateTweetsDidSet","isSet","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","alert","onSubmit","newVal","current","value","ref","required","TweetsList","FeedComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","didLookup","setDidLookup","setTweet","handleBackendLookup","apiTweetDetail","App","src","logo","alt","target","rel","Boolean","hostname","getElementById","ReactDOM","render","StrictMode","e","createElement","tweetsEl","JointComponent","dataset","tweetFeedEl","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2d383597.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// import React from 'react';\n\nexport function backendLookup(method, endpoint, callback, data) {\n\tlet jsonData;\n\tif (data) {\n\t\tjsonData = JSON.stringify(data)\n\t}\n\tconst xhr = new XMLHttpRequest();\n\t// const method = 'GET';\n\tconst url = `http://localhost:8000/api${endpoint}`;\n\tconst responseType = 'json';\n\tconst csrftoken = getCookie('csrftoken');\n\txhr.responseType = responseType;\n\txhr.open(method, url);\n\n\txhr.setRequestHeader(\"Content-Type\", \"application/json\");\n\tif (csrftoken) {\n\t\txhr.setRequestHeader('HTTP_X_REQUESTED_WITH', 'XMLHttpRequest');\n\t\txhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n\t\txhr.setRequestHeader('X-CSRFToken', csrftoken);\n\t}\n\txhr.onload = function () {\n\t\tif (xhr.status === 403){\n\t\t\tconst detail = xhr.response.detail;\n\t\t\tif (detail === \"Authentication credentials were not provided.\"){\n\t\t\t\tif (window.location.href.indexOf(\"login\") === -1){\n\t\t\t\t\twindow.location.href = \"/login?showLoginRequired=true\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcallback(xhr.response, xhr.status);\n\t}\n\txhr.onerror = function () {\n\t\tcallback({ \"message\": \"There was an error fetching data from the server.\" }, 400)\n\t}\n\txhr.send(jsonData);\n}\n\nfunction getCookie(name) {\n\tvar cookieValue = null;\n\tif (document.cookie && document.cookie !== '') {\n\t\tvar cookies = document.cookie.split(';');\n\t\tfor (var i = 0; i < cookies.length; i++) {\n\t\t\tvar cookie = cookies[i].trim();\n\t\t\t// Does this cookie string begin with the name we want?\n\t\t\tif (cookie.substring(0, name.length + 1) === (name + '=')) {\n\t\t\t\tcookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn cookieValue;\n}","import { backendLookup } from '../lookup';\n\nexport function apiTweetCreate(newTweet, callback) {\n\tbackendLookup(\"POST\", \"/tweets/create\", callback, { content: newTweet });\n}\nexport function apiTweetAction(tweetId, action, callback) {\n\tbackendLookup(\"POST\", \"/tweets/action\", callback, { id: tweetId, action: action });\n}\n\nexport function apiTweetDetail(tweetId, callback) {\n\tlet endpoint = \"/tweets/\";\n\n\tif (tweetId) {\n\t\tendpoint += `${tweetId}`;\n\t}\n\tbackendLookup(\"GET\", endpoint, callback);\n}\nexport function apiTweetList(username, callback, nextUrl) {\n\tlet endpoint = \"/tweets/\";\n\n\tif (username) {\n\t\tendpoint += `?username=${username}`;\n\t}\n\tif (nextUrl !== null && nextUrl !== undefined) {\n\t\tendpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\n\t}\n\tbackendLookup(\"GET\", endpoint, callback);\n}\n\nexport function apiTweetFeed(callback, nextUrl) {\n\tlet endpoint = \"/tweets/feed\";\n\n\n\tif (nextUrl !== null && nextUrl !== undefined) {\n\t\tendpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\n\t}\n\tbackendLookup(\"GET\", endpoint, callback);\n}\n","import React from 'react';\nimport { apiTweetAction } from './lookup';\n\nconst ActionBtn = function (props) {\n\tconst { tweet, action, didPerformAction, className } = props;\n\tconst likes = tweet.likes ? tweet.likes : 0;\n\tlet newClassName = 'btn btn-sm' + className;\n\n\tconst handleActionBackendEvent = (response, status) => {\n\t\tconsole.log(response, status);\n\t\tif ((status === 200 || status === 201) && didPerformAction) {\n\t\t\tdidPerformAction(response, status);\n\t\t}\n\t}\n\tconst handleClick = (event) => {\n\t\tevent.preventDefault();\n\t\tapiTweetAction(tweet.id, action.type, handleActionBackendEvent)\n\t}\n\n\treturn <button className={newClassName} onClick={handleClick}>{action.type === 'like' ? likes + ' ' + action.display : action.display}</button>\n\n}\n\nexport {\n\tActionBtn\n}","import React, { useState } from 'react';\nimport { ActionBtn } from './buttons';\n\nfunction UserLink (props) {\n\tconst {user, includeFullname} = props;\n\t\n\tconst handleUserLink = (event) => {\n\t\twindow.location.href = `/profile/${user.username}`;\n\t}\n\t\n\treturn (\n\t\t<div className=\"d-inline-block\"> \n\t\t\t{includeFullname && <span className=\"pl-3\">{user.first_name} {user.last_name}</span>}\n\t\t\t<span className=\"pl-1\" onClick={handleUserLink}>@{user.username}</span>\n\t\t</div>\n\t)\n}\nfunction UserPicture (props) {\n\tconst {user} = props;\n\treturn (\n\t\t<span className=\"px-3 py-2 rounded-circle bg-dark text-white\">\n\t\t{user.username[0]}\n\t\t</span>\n\t)\n}\nconst ParentTweet = props => {\n\tconst { tweet, retweeter } = props;\n\treturn tweet.parent ? \n\t\t<div><Tweet isRetweet hideActions retweeter={retweeter} tweet={tweet.parent} /></div> : null;\n}\n\nconst Tweet = function (props) {\n\tconst { tweet, hideActions, isRetweet, retweeter } = props;\n\tconst [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null);\n\tconst path = window.location.pathname;\n\tconst match = path.match(/(?<tweetid>\\d+)/);\n\tconst urlTweetId = match ? match.groups.tweetid : -1;\n\tconst isDetail = `${tweet.id}` === `${urlTweetId}`;\n\tlet className = \"col-sm-6 mx-auto border rounded py-3 mb-4\";\n\tclassName = isRetweet ? `${className} bd-highlight border-info` : className;\n\n\tconst handleLink = (event) => {\n\t\tevent.preventDefault();\n\t\twindow.location.href = `/${tweet.id}`\n\t}\n\tconst handlePerformAction = (newActionTweet, status) => {\n\t\tif (status === 200) {\n\t\t\tsetActionTweet(newActionTweet);\n\t\t} else if (status === 201) {\n\t\t\t// let the tweet list know\n\t\t\tif (props.didRetweet) {\n\t\t\t\tsetActionTweet(newActionTweet);\n\t\t\t\tprops.didRetweet(newActionTweet);\n\t\t\t}\n\t\t}\n\t}\n\treturn (\n\t\t<div className={className}>\n\t\t\t<div className=\"d-flex flex-column\">\n\t\t\t\t{isRetweet && \n\t\t\t\t<div className=\"d-flex justify-content-end\">\n\t\t\t\t\t<small>\n\t\t\t\t\t\tRetweet via<UserLink user={retweeter} includeFullname={false} />\n\t\t\t\t\t</small>\n\t\t\t\t</div>}\n\t\t\t\t<div className=\"justify-content-start py-3\">\n\t\t\t\t\t<UserPicture user={tweet.user}/>\n\t\t\t\t\t<UserLink user={tweet.user} includeFullname={true}/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"justify-content-start\">\n\t\t\t\t\t<p className=\"text-break\">{tweet.id} - {tweet.content}</p>\n\t\t\t\t\t<ParentTweet tweet={tweet} retweeter={tweet.user} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"btn btn-group justify-content-start flex-grow-0\">\n\t\t\t\t\t{(actionTweet && hideActions !== true) && <React.Fragment>\n\t\t\t\t\t\t<ActionBtn\n\t\t\t\t\t\t\ttweet={actionTweet}\n\t\t\t\t\t\t\tdidPerformAction={handlePerformAction}\n\t\t\t\t\t\t\taction={{ type: 'like', display: 'Like(s)' }}\n\t\t\t\t\t\t\tclassName=\" btn-primary flex-grow-0\">\n\t\t\t\t\t\t</ActionBtn>\n\t\t\t\t\t\t<ActionBtn\n\t\t\t\t\t\t\ttweet={actionTweet}\n\t\t\t\t\t\t\tdidPerformAction={handlePerformAction}\n\t\t\t\t\t\t\taction={{ type: 'unlike', display: 'Unlike' }}\n\t\t\t\t\t\t\tclassName=\" btn-secondary flex-grow-0\">\n\t\t\t\t\t\t</ActionBtn>\n\t\t\t\t\t\t<ActionBtn\n\t\t\t\t\t\t\ttweet={actionTweet}\n\t\t\t\t\t\t\tdidPerformAction={handlePerformAction}\n\t\t\t\t\t\t\taction={{ type: 'retweet', display: 'Retweet' }}\n\t\t\t\t\t\t\tclassName=\" btn-outline-dark flex-grow-0\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t</ActionBtn>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t}\n\t\t\t\t\t{!isDetail && <button className=\"btn btn-sm btn-success flex-grow-0\" onClick={handleLink}>View</button>}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\n\n\nexport {\n\tParentTweet,\n\tTweet\n}","import React, { useEffect, useState } from 'react';\nimport { apiTweetFeed } from './lookup';\nimport { Tweet } from './detail';\n\nconst FeedList = function (props) {\n\tconst [tweetsInit, setTweetsInit] = useState([]); // initial tweets\n\tconst [tweets, setTweets] = useState([]); // initial + new tweets\n\tconst [nextUrl, setNextUrl] = useState(null);\n\tconst [tweetsDidSet, setTweetsDidSet] = useState(false); // stop constant reloading \n\n\tuseEffect(() => {\n\t\tconsole.log(\"set final tweets\")\n\t\tlet final = [...props.newTweets].concat(tweetsInit);\n\t\tif (final.length !== tweets.length) {\n\t\t\tsetTweets(final);\n\t\t}\n\t}, [props.newTweets, tweets, tweetsInit])\n\n\tuseEffect(() => {\n\t\tif (tweetsDidSet === false) {\n\t\t\tconst handleTweetsListLookup = (response, status) => {\n\t\t\t\tif (status === 200) {\n\t\t\t\t\tsetNextUrl(response.next)\n\t\t\t\t\tsetTweetsInit(response.results);\n\t\t\t\t\tsetTweetsDidSet(true);\n\t\t\t\t\tconsole.log(\"handleTweetsListLookup\", tweetsDidSet)\n\t\t\t\t}\n\t\t\t}\n\t\t\tapiTweetFeed(handleTweetsListLookup)\n\t\t}\n\t\t// do my lookup to backend\n\t}, [tweetsInit, tweetsDidSet, setTweetsDidSet])\n\n\tconst handleDidRetweet = (newTweet) => {\n\t\tconst updatedTweetsInit = [...tweetsInit];\n\t\tupdatedTweetsInit.unshift(newTweet);\n\t\tsetTweetsInit(updatedTweetsInit);\n\t\tconst updatedFinalTweets = [...tweets];\n\t\tupdatedFinalTweets.unshift(tweets);\n\t\tsetTweets(updatedFinalTweets);\n\t\tconsole.log(\"updatedFinalTweets\", updatedFinalTweets)\n\t}\n\n\tconst handleLoadNext = (event) => {\n\t\tevent.preventDefault();\n\t\tif (nextUrl !== null) {\n\t\t\tconst handleLoadNextResponse = (response, status) => {\n\t\t\t\tif (status === 200) {\n\t\t\t\t\tconsole.log(\"handleLoadNextResponse\")\n\t\t\t\t\tsetNextUrl(response.next)\n\t\t\t\t\tconst newTweets = [...tweets].concat(response.results)\n\t\t\t\t\tsetTweetsInit(newTweets);\n\t\t\t\t\tsetTweets(newTweets)\n\t\t\t\t\t// setTweetsDidSet(true);\n\t\t\t\t}\n\t\t\t}\n\t\t\tapiTweetFeed(handleLoadNextResponse, nextUrl)\n\t\t}\n\t}\n\treturn (<React.Fragment>{tweets.map((item, index) => {\n\t\treturn <Tweet\n\t\t\ttweet={item}\n\t\t\tdidRetweet={handleDidRetweet}\n\t\t\tkey={`${index}- ${item.id}`}\n\t\t\tupdateTweetsDidSet={(isSet) => { setTweetsDidSet(isSet) }}\n\t\t/>\n\t})}\n\t\t{nextUrl !== null && <button onClick={handleLoadNext} className=\"btn btn-outline-primary btn-sm\">Load next</button>}\n\t</React.Fragment>)\n\n\n}\n\nexport {\n\tFeedList,\n}","import React  from 'react';\nimport { apiTweetCreate } from './lookup';\n\nexport function TweetCreate(props) {\n\tconst textAreaRef = React.createRef();\n\tconst { didTweet } = props;\n\n\tconst handleBackendUpdate = (response, status) => {\n\t\t// backend api response handler\n\t\tif (status === 201) {\n\t\t\tdidTweet(response);\n\t\t} else {\n\t\t\talert(\"An error occurred while processing new tweet\")\n\t\t}\n\t}\n\n\n\tconst handleSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tconst newVal = textAreaRef.current.value;\n\t\t// backend api request handler\n\t\tapiTweetCreate(newVal, handleBackendUpdate);\n\t\ttextAreaRef.current.value = '';\n\t}\n\n\treturn (\n\t\t<div className={props.className}>\n\t\t\t<div className=\"col-12 mb-3\">\n\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t<textarea ref={textAreaRef} required={true} className=\"form-control\" name=\"tweet\"></textarea>\n\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary my-3\">Tweet</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</div>\n\t)\n}","import React, { useEffect, useState } from 'react';\nimport { apiTweetList } from './lookup';\nimport { Tweet } from './detail';\n\nconst TweetsList = function (props) {\n\tconst [tweetsInit, setTweetsInit] = useState([]); // initial tweets\n\tconst [tweets, setTweets] = useState([]); // initial + new tweets\n\tconst [nextUrl, setNextUrl] = useState(null);\n\tconst [tweetsDidSet, setTweetsDidSet] = useState(false); // stop constant reloading \n\n\tuseEffect(() => {\n\t\tconsole.log(\"set final tweets\")\n\t\tlet final = [...props.newTweets].concat(tweetsInit);\n\t\tif (final.length !== tweets.length) {\n\t\t\tsetTweets(final);\n\t\t}\n\t}, [props.newTweets, tweets, tweetsInit])\n\n\tuseEffect(() => {\n\t\tif (tweetsDidSet === false) {\n\t\t\tconst handleTweetsListLookup = (response, status) => {\n\t\t\t\tif (status === 200) {\n\t\t\t\t\tsetNextUrl(response.next)\n\t\t\t\t\tsetTweetsInit(response.results);\n\t\t\t\t\tsetTweetsDidSet(true);\n\t\t\t\t\tconsole.log(\"handleTweetsListLookup\", tweetsDidSet)\n\t\t\t\t} else {\n\t\t\t\t\t// setTweetsDidSet(false);\n\t\t\t\t\talert(response, status);\n\t\t\t\t}\n\t\t\t}\n\t\t\tapiTweetList(props.username, handleTweetsListLookup)\n\t\t}\n\t\t// do my lookup to backend\n\t}, [props.username, tweetsInit, tweetsDidSet, setTweetsDidSet])\n\n\tconst handleDidRetweet = (newTweet) => {\n\t\tconst updatedTweetsInit = [...tweetsInit];\n\t\tupdatedTweetsInit.unshift(newTweet);\n\t\tsetTweetsInit(updatedTweetsInit);\n\t\tconst updatedFinalTweets = [...tweets];\n\t\tupdatedFinalTweets.unshift(tweets);\n\t\tsetTweets(updatedFinalTweets);\n\t\tconsole.log(\"updatedFinalTweets\", updatedFinalTweets)\n\t}\n\n\tconst handleLoadNext = (event) => {\n\t\tevent.preventDefault();\n\t\tif (nextUrl !== null) {\n\t\t\tconst handleLoadNextResponse = (response, status) => {\n\t\t\t\tif (status === 200) {\n\t\t\t\t\tconsole.log(\"handleLoadNextResponse\")\n\t\t\t\t\tsetNextUrl(response.next)\n\t\t\t\t\tconst newTweets = [...tweets].concat(response.results)\n\t\t\t\t\tsetTweetsInit(newTweets);\n\t\t\t\t\tsetTweets(newTweets)\n\t\t\t\t\t// setTweetsDidSet(true);\n\t\t\t\t} else {\n\t\t\t\t\talert(response, status);\n\t\t\t\t}\n\t\t\t}\n\t\t\tapiTweetList(props.username, handleLoadNextResponse, nextUrl)\n\t\t}\n\t}\n\treturn <React.Fragment>{tweets.map((item, index) => {\n\t\treturn <Tweet\n\t\t\ttweet={item}\n\t\t\tdidRetweet={handleDidRetweet}\n\t\t\tkey={`${index}- ${item.id}`}\n\t\t\tupdateTweetsDidSet={(isSet) => { setTweetsDidSet(isSet) }}\n\t\t/>\n\t})}\n\t{ nextUrl !== null && <button onClick={handleLoadNext} className=\"btn btn-outline-primary btn-sm\">Load next</button>}\n\t</React.Fragment>\n\n\n}\n\nexport {\n\tTweetsList\n}","import React, { useEffect, useState } from 'react';\nimport { Tweet } from './detail';\nimport { apiTweetDetail } from './lookup';\nimport { FeedList } from './feed';\nimport { TweetCreate } from './create';\nimport { TweetsList } from './list';\n\nexport function FeedComponent(props) {\n\tconst [newTweets, setNewTweets] = useState([]);\n\tconst canTweet = props.canTweet === \"false\" ? false : true;\n\tconst handleNewTweet = (newTweet) => {\n\t\t// backend api response handler\n\t\tlet tempNewTweets = [...newTweets];\n\t\ttempNewTweets.unshift(newTweet); // put it to beginning of list\n\t\tsetNewTweets(tempNewTweets);\n\t}\n\n\n\treturn (\n\t\t<div className={props.className}>\n\t\t\t{canTweet === true && <TweetCreate didTweet={handleNewTweet} />}\n\t\t\t<FeedList newTweets={newTweets} {...props} />\n\t\t</div>\n\t)\n}\n\nexport function TweetsComponent(props) {\n\tconst [newTweets, setNewTweets] = useState([]);\n\tconst canTweet = props.canTweet === \"false\" ? false : true;\n\tconst handleNewTweet = (newTweet) => {\n\t\t// backend api response handler\n\t\tlet tempNewTweets = [...newTweets];\n\t\ttempNewTweets.unshift(newTweet); // put it to beginning of list\n\t\tsetNewTweets(tempNewTweets);\n\t}\n\n\n\treturn (\n\t\t<div className={props.className}>\n\t\t\t{canTweet === true && <TweetCreate didTweet={handleNewTweet} />}\n\t\t\t<TweetsList newTweets={newTweets} {...props} />\n\t\t</div>\n\t)\n}\n\n\nexport function TweetDetailComponent(props) {\n\tconst { tweetId } = props;\n\tconst [didLookup, setDidLookup] = useState(false);\n\tconst [tweet, setTweet] = useState(null);\n\n\tconst handleBackendLookup = (response, status) => {\n\t\tif (status === 200) {\n\t\t\tsetTweet(response);\n\t\t} else {\n\t\t\talert(\"There was an error fetching your tweet\")\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tif (didLookup === false) {\n\t\t\tapiTweetDetail(tweetId, handleBackendLookup)\n\t\t\tsetDidLookup(true); //\n\t\t}\n\t}, [tweetId, didLookup, setDidLookup]);\n\n\treturn tweet === null ? null : <Tweet tweet={tweet} className={props.className} />\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport { FeedComponent } from './tweets';\n\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n\t\t\t\t<FeedComponent/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { FeedComponent, TweetsComponent, TweetDetailComponent} from './tweets';\nimport * as serviceWorker from './serviceWorker';\n\nconst appEl = document.getElementById('root');\nif (appEl) {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\n\nconst e = React.createElement; \nconst tweetsEl = document.getElementById('tweetme-2');\nif (tweetsEl) {\n\tconst JointComponent = e(TweetsComponent, tweetsEl.dataset);\n  ReactDOM.render(JointComponent, tweetsEl);\n}\nconst tweetFeedEl = document.getElementById('tweetme-2-feed');\nif (tweetFeedEl) {\n\tconst JointComponent = e(FeedComponent, tweetFeedEl.dataset);\n  ReactDOM.render(JointComponent, tweetFeedEl);\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".tweetme-2-detail\");\n\ntweetDetailElements.forEach(container => {\n\tconst JointComponent = e(TweetDetailComponent, container.dataset);\n\tReactDOM.render(JointComponent, container);\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}